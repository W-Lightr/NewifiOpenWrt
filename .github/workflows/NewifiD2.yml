# @乘风小栈

name: 编译 NewifiD2 OpenWrt
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
  watch:
    types: [started]
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  CONFIG_FILE: config/d2.config
  CONFIG_FEEDS: config/feeds.conf.default
  UPLOAD_RELEASE: true
  REMOVE_WORKFLOW_RUNS: true
  
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting docker files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 准备更新依赖
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
    - name: 克隆仓库
      run: |
        git clone $REPO_URL lede
        ln -sf /workdir/lede $GITHUB_WORKSPACE/lede
    - name: FEEDS
      run: |
        [ -f $CONFIG_FEEDS ] && mv $CONFIG_FEEDS lede/feeds.conf.default

    - name: 更新/安装 Feeds
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    # - name: 编译
    #   run: |
    #     cd openwrt
    #     make defconfig
    - name: 导入配置
      run: |
        [ -f $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    - name: Theme
      run: |
        cd lede/package/lean 
        rm -rf luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
    
    - name: Download package
      run: |
        cd lede 
        make defconfig
        make download -j$(nproc) V=s
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译
      run: |    
        cd lede
        make -j$(nproc) || make -j1 V=s
    
    - name: CD
      run: |
        cd lede/bin/targets/ramips/mt7621
        mkdir -p op
        chmod 766 op
        mv ./openwrt-ramips-* ./op

    # - name : Upload artifact
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: Newifi3-d2
    #     path: lede/bin/targets/ramips/mt7621/op

    - name: Upload Firmware to Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: NewifiD2-Update
        body: 更新固件
        files: lede/bin/targets/ramips/mt7621/op/*
    
    - name: Remove workflow runs
      uses: GitRML/delete-workflow-runs@main
      if: env.REMOVE_WORKFLOW_RUNS == 'true' && !cancelled()
      with:
        retain_days: 1
        keep_minimum_runs: 3